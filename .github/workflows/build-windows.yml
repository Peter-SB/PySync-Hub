name: Build Windows App

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install Node Dependencies
        run: |
          cd src
          npm install
          cd frontend-react && npm install
          cd ../..

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Python Dependencies
        run: |
          cd src/backend-flask
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build React Frontend
        run: |
          cd src/frontend-react
          $env:CI = "false"
          npm run build
          cd ../..

      - name: Package Electron App
        run: |
          cd src
          npm run make
          cd ..

      - name: Build Python Backend with PyInstaller
        run: |
          cd src/backend-flask/
          pyinstaller pysync-hub-backend.spec
          cd ../..

      - name: Remove dist/make Directory
        run: |
          if (Test-Path -Path dist/make) {
            Remove-Item -Path dist/make -Recurse -Force
          }
        working-directory: ${{ github.workspace }}

      - name: Download and Unzip FFMPEG/FFPROBE
        run: |
          Invoke-WebRequest -Uri "https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.zip" -OutFile "ffmpeg.zip"
          Expand-Archive -Path ffmpeg.zip -DestinationPath ffmpeg_temp
        working-directory: ${{ github.workspace }}

      - name: Copy FFMPEG/FFPROBE to dist and Cleanup
        run: |
          mkdir -Force dist/ffmpeg
          Get-ChildItem -Path ffmpeg -Recurse | ForEach-Object {
            if ($_.Name -match "ffmpeg\.exe$|ffprobe\.exe$") {
              Copy-Item -Path $_.FullName -Destination dist/ffmpeg/ -Force
            }
          }
          Remove-Item -Path ffmpeg.zip, ffmpeg_temp -Recurse -Force
        working-directory: ${{ github.workspace }}

      - name: Prepare Artifact Directory
        run: |
          mkdir -p artifact/dir
          mv dist/* artifact/dist/

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: PySync-Hub-windows
          path: artifact/
